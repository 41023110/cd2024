var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"2a-midag8 2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w12-任務一 使用Siwmens NX Journal設計專案，在其中可使用NXOpen程式執行儲存格式 。在使用軟體時建議使用英文介面，因為中文翻譯的介面並不明確。 在設定選擇用語時，選擇Python方便後續網際上延伸編輯後續。 組別分配網球平衡台零件繪製，並用NXOpen Python執行。之後試著把每個零件組合起來，並且做出啟動一個程式時全部的零組件可以在一程式域內快速組合起來。 w12-1遇到問題 在旋轉成型的零件上，在play程式時會遇到流程中斷的問題。 但改良不使用旋轉成形的模組建立後，就不會有此問題。 w12-任務二 將分組倉儲設為評分子模組，直接在Repilt進行git clear、import跟git push過了。 直接在倉儲做git submodule add+分組倉儲+組別，其為做子模組的方式。後續acp確認是否有丟上成功。 後續試著子模組能否整合。 w12-2遇到問題 在組裝時會遇到結合過度約束的紅標，盡量更選使用讓最後成品顯示於干涉。 還有尺寸的部分更改零件後，約束要刪除重新給定。 w12-任務三 進行足球機器人網際場景模擬，在cd2024 blog上下載去年的倉儲資料，並安裝跟改過的CoppeliaSim ipv6。 要確認軟體內modules之connectivity的三個visualization stream、ws remote api server、zmq remote api server分別都是running的狀態。 visualization stream是在瀏覽器上輸入埠號為23020的localhost可看到目前的模擬場景。 開啟下載到的模擬場景，有兩個程式可以執行，分別judge.py與player.py。 w12-3遇到問題 在CoppeliaSim場景開啟後匯入機器人，在擺正機器人與定位不是很熟練。 在給定位銷時不知道怎麼讓它約束在點上。 後續模擬還在練習。","tags":"w12","url":"./2024-Spring-w12-blog-tutorial.html"},{"title":"2024 協同課程a-w9.10.11","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引 任務 倉儲與網站建立: 根據老師給予的2a各學員評分相關網站，取得老師所寫的程式，並詢問ChatGPT找出相應程式碼。 將原本有74行的程式碼簡化至40幾行，保持功能一致。 鋼球平衡台零組件繪圖: 解壓縮Solvespace_model_2d_for_cd2024_w6.7z檔案中的零件，根據尺寸在NX中進行繪製。 組裝過程中錄製並剪輯成13分鐘的影片，提供詳細步驟及組合圖 任務 協同產品設計實習課程專案 主要內容:利用Odoo PLM進行鋼球平衡台與綜合球賽機器人模擬系統的協同設計。 利用老師的程式碼與ChatGPT協助，簡化並保持結果一致。 撰寫各報告摘要並錄製零組件組裝影片。 使用Odoo PLM進行協同設計與翻譯，生成中英文並列的pdf檔案。 協同處理教學影片，整理逐字稿並完成期中自評。 安裝Siemens NX 1872，進行零組件繪圖與模擬。 使用Sourcetree管理倉儲，理解改版及解決衝突。 第七週摘要協同模式，第八週應用AI協助閱讀論文與整理資料，第十週完成實習任務。","tags":"a-w9-41023110","url":"./2024-協同課程a-w9-41023110.html"},{"title":"2024 協同課程a-w7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引 w7 任務指派 每人負責不同週網誌文章的撰寫與統整，之後組長將所有組員的網誌文章整合到分組倉儲中。 w7 CoppeliaSim 環境中 IPv6 ZeroMQ Remote API Python 模擬任務 查找並說明如何在CoppeliaSim環境中，利用IPv6 ZeroMQ Remote API Python進行兩個自由度的鋼球平衡檯自動控制系統模擬。 實際測試模擬環境，確保模擬系統的正確性和穩定性。 整理並撰寫模擬過程與結果的報告，並將其納入分組倉儲的Markdown目錄中。 w7 使用工具 網誌管理與網際簡報:cmsimde_site: 利用Pelican管理使用者所建立的網誌，利用Reveal管理使用者所建立的網際簡報。 內容管理方法:Python執行網頁編輯: 使用Replit、Codespaces、Gitpod及localhost四種方法進行。 雲端作業:各自選擇合適的工具。 w7 作業協同設計 分組網站內容的協同:整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中。 報告內容的協同:使用Github Actions與近端MikTeX中的xelatex將.tex轉為pdf。 產品設計的PLM協同:使用Odoo PLM模組進行協同管理。 零組件設計的協同:Solvespace進行設計，使用Siemens NX 1872進行協同零組件繪圖設計。 w7 每週網誌管理過程 網誌撰寫與轉檔流程: 各組員每週在 cd2024 倉儲中的 markdown 目錄編寫網誌文章。 經由Pelican轉檔至 blog 目錄中的超文件網誌。 確保 combined_markdown 目錄中的Markdown檔案命名不重複，Slug字串不可重複。 使用Replit進行內容維護: 組員可從Replit Connect至Github進行倉儲維護，但需OpenSSH管理權限來管理分組倉儲。","tags":"a-w7-41023110","url":"./2024-協同課程a-w7-41023110.html"},{"title":"2024 協同課程a-w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引 w6教學影片分組整理並自評 分組倉儲上w4.w6有個人負責與自評","tags":"a-w6-41023110","url":"./2024-協同課程a-w6-41023110.html"},{"title":"2024 協同課程a-w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引 w5教學內容為先前影片整理、分組網誌的統整 --影片製作 影片剪輯後製流程: 我們使用 CapCut 軟體來進行影片剪輯和後製工作。 字幕處理: 目前CapCut字幕只支援簡體中文，因此我們需要在翻譯後重新逐字更改翻錯的內容並將簡體字改成繁體字。 20分鐘以上的影片通常需要花費2-3小時以上的時間來剪輯。 工作量分配: 因人手不足，每個人至少需要剪輯8至9片影片。 剪完影片後需要將簡體中文字幕改成繁體中文。 剪輯完成的影片需要上傳至YouTube。如果影片超過20分鐘，YouTube會提示影片過長，需要將影片分成上下兩部。 w5網誌統整流程 文件整合: 各組員每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中。 修改分組倉儲中的 pelicanconf.py，使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數，指定網誌統整目錄。 這樣可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌。 設定操作: pelicanconf.py 中的程式設定段，將子模組中 markdown 目錄的 .md 檔案動態複製到分組倉儲中的 combined_directory。 避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案。 再進行網誌轉檔，並將所產生的網誌超文件存入所設定的 blog 目錄。 轉檔指令: 設定完成後的網誌轉檔指令為：pelican -s local_publishconf.py，表示要利用 local_publishconf.py 的設定進行轉檔，且先前有關 pelicanconf.py 的設定也將導入執行。 命名規則: 各組員必須將個別的網誌 .md 檔案名稱加上前綴字串，例如： \"學號_\" 加上獨一無二的網誌 Slug 字串名稱。 Category 使用該組員的學號作為標示。 這樣在統整轉檔時，不會發生相同網誌文章檔案名稱衝突的錯誤，且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容。 w5主要工作 *使用CapCut軟體進行影片剪輯，需手動將簡體字改成繁體字，20分鐘以上影片需花1小時以上剪輯。 *上傳YouTube影片。 *各組員的網誌文章需放在個別倉儲的 markdown 目錄中，並修改 pelicanconf.py 進行統整。 *使用 pelicanconf.py 設定將 .md 檔案動態複製到 combined_directory，避開 pages 目錄。 *轉檔指令為：pelican -s local_publishconf.py，需加上學號前綴及獨一無二的Slug字串。 *確保每個網誌文章有獨立的Category標示，以便於檔案管理及查找。","tags":"a-w5-41023110","url":"./2024-協同課程a-w5-41023110.html"},{"title":"2024 協同課程a-w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引 w4-1 教學影片分組整理 w4 2a 分組任務 負責w3 a.b的影片 使用capcut編輯字幕與影片剪輯，把翻譯好的影片上傳到youtube並嵌入在txt，在記事本依檔照程序碼排版。上傳到組與個人downloads。","tags":"a-w4-41023110","url":"./2024-協同課程a-w4-41023110.html"},{"title":"2024 協同課程a-w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w3 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料。 負責第三段 43-65page 由41023110 (introduction_orig.txt, 使用了chatgpt與劍橋辭翻譯，並用word編排翻譯段落。 如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組 一.在 Replit 維護項目： Replit 綁定到你給它的賬號。 在近端操作需先克隆，修改後再推回。 二.確認權限： 利用 SSH 確認是否有權限。 權限在 cadlab 檔上的 putty.reg。 若有實體權限，雙擊寫入，確認 PuTTY 有對應的 key 和 settings。 三.克隆倉儲： 設置 PuTTY settings，確認沒有設 proxy。 確認 key 設置在外部可攜環境。 確認連線後，將 key as push 到主態登錄檔 regedit 中的 current_root 下的 software 內。 四.克隆倉儲到 C 槽： 在 C 槽建立 tmp 資料夾：mkdir tmp。 使用指令克隆倉儲：git clone --recurse-submodules ssh://對應賬號。 五.設置子模組： 進入倉儲目錄，抓取資料並添加：git add。 使用 git submodule add 命令將個人課程倉儲添加為子模組。 需使用 HTTPS 抓取子模組，因為分組倉儲沒有權限。 六.處理子模組： 將組員的倉儲抓下來，分段抓取未處理完的章節。 推送更新：git push，並處理 .gitmodules 的衝突。 這樣可以有效管理和維護分組倉儲。","tags":"協同課程a-w3-41023110","url":"./2024-協同課程a-w3-41023110.html"},{"title":"2024 協同課程a-w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. -1 說明甲班第一組組長如何建立 midag1 Team, 並利用 Codespaces 維護 2a-midag1 分組倉儲 終端機每個人每月都有120code小時。要push倉儲要新增終端機後，進行git add->git commit\"網頁標題\"，執行後就會直接推上不需要在轉檔。啟動靜態要在新增終端機，有python3內建模組了就可以直接http.server直接啟動埠號，8000會自動開啟瀏覽器連結，就可以直接進入到靜態。用完codespaces要在關閉code讓計時暫停。 利用 Codespaces 維護 : 一.在 GitHub Classroom 中建立組別倉儲： a.組長在 \"or create a new team\" 處以 \"midag X\" 命名組別，然後點擊 \"+create team\" 創建。 b.組員各自加入組別。 二.完成倉儲建立後： a.前往倉儲的 settings 選取 pages 進入主分支，啟動 GitHub Pages。 b.使用 Codespaces 維護內容。 三.在 Codespaces 中： a.不需要使用公用的 443 埠號，有許多終端機和埠號資源可用。 b.啟動終端機並安裝模組：執行 chmod u+x init_replit，安裝完成後會有 2GB 記憶體。 c.使用 python3 main.py 執行動態應用，並使用 8080 埠號開啟瀏覽器。 d.連結埠號會顯示亂碼，保證安全性。 e.登入後可以更改內容。 -2 說明如何利用Replit管理從 Classroom 取得的分組倉儲 一.在 Replit 中建立網站： a.使用 from url 導入資料，改成 Python 模式並 import 到分組倉儲，但在 Replit 上無法直接維護分組倉儲。 二.生成 SSH 密鑰： a.在 shell 中執行 ssh-keygen，跟 s.cycu 相同。 b.執行 pwd 確認倉儲位置在 home/runner 下。 c.使用 cd ../ 切換到 runner 目錄，執行 ls -l 查看 pub 鍵。 三.建立個人 ID： a.確認有 putty，新增 SSH 並複製 import 資料。 b.打開 puttygen.exe，生成亂數，複製內容到組長倉儲的 settings。 c.將 ID 存在 settings 和 .ssh 目錄中。 這樣就可以載入並顯示 pub key。 -3 如何利用近端可攜環境與外部 IPv4 開啟動態網站。 一.使用 SSH 啟動並克隆倉儲： a.使用 PuTTY 進入 Replit，沒有任何 settings。 b.在系統中用 regedit 使三個倉儲同步。 c.設置外擴 IPv4，使遠端可通過防火牆設置進入。 二.使用 PuTTY 設置連接： a.在 PuTTY Configuration 中輸入 github.com 作為 IP。 b.在 Sessions 和 SSH 中設置 ppk 文件。 c.將倉儲設在常用資料位置，以便隨時啟動。 三.設定 SSH 資料夾： a.在 SSH 的 credentials 中設置 ppk 文件的位置。 b.保存後 open，會給予一把 key，連線時無法取得。 四.存取 GitHub 檔案： a.匯出檔案到可攜環境，若有對應 key 且已 open，則可用 SSH 抓取並推回倉儲。 b.在近端自由啟動動態： 小組成員可以獨立編輯，不受他人干擾。 連接組員： 改密碼後查詢 IP，並複製到 init.py 中修改，設置外部 IP 儲存，使電腦變成主機。 這樣可以使組員在 CMS 中一次完成動作。","tags":"協同課程a-w2-41023110","url":"./2024-協同課程a-w2-41023110.html"},{"title":"2024 協同課程a-w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 網站內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"a-w1-41023110","url":"./2024-協同課程a-w1-41023110.html"}]};